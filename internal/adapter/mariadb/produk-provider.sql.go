// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.20.0
// source: produk-provider.sql

package mariadb

import (
	"context"
	"database/sql"
)

const listProviderProduk = `-- name: ListProviderProduk :many
SELECT idproduk, kode_produk, kode_produk_provider, nama_produk, kategori, provider, rctype, provider_bank, fee_produk, mode_sto, mode_repeat, class_rpc, class_name, class_tipe, class_ip, class_port, class_path, class_setting, class_timeout, tipemodel, screenname, status, fee_app_1, fee_ca_1, fee_biller_1, fee_app_2, fee_ca_2, fee_biller_2, fee_app_3, fee_ca_3, fee_biller_3, fee_app_4, fee_ca_4, fee_biller_4 FROM m_produk_provider where kode_produk=?
`

func (q *Queries) ListProviderProduk(ctx context.Context, kodeProduk sql.NullString) ([]MProdukProvider, error) {
	rows, err := q.db.QueryContext(ctx, listProviderProduk, kodeProduk)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	items := []MProdukProvider{}
	for rows.Next() {
		var i MProdukProvider
		if err := rows.Scan(
			&i.Idproduk,
			&i.KodeProduk,
			&i.KodeProdukProvider,
			&i.NamaProduk,
			&i.Kategori,
			&i.Provider,
			&i.Rctype,
			&i.ProviderBank,
			&i.FeeProduk,
			&i.ModeSto,
			&i.ModeRepeat,
			&i.ClassRpc,
			&i.ClassName,
			&i.ClassTipe,
			&i.ClassIp,
			&i.ClassPort,
			&i.ClassPath,
			&i.ClassSetting,
			&i.ClassTimeout,
			&i.Tipemodel,
			&i.Screenname,
			&i.Status,
			&i.FeeApp1,
			&i.FeeCa1,
			&i.FeeBiller1,
			&i.FeeApp2,
			&i.FeeCa2,
			&i.FeeBiller2,
			&i.FeeApp3,
			&i.FeeCa3,
			&i.FeeBiller3,
			&i.FeeApp4,
			&i.FeeCa4,
			&i.FeeBiller4,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
